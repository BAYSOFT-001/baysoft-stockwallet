// <auto-generated />
using System;
using BAYSOFT.Core.Infrastructures.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BAYSOFT.Presentations.WebAPI.Migrations.StockWalletDb
{
    [DbContext(typeof(StockWalletDbContext))]
    [Migration("20200730044506_InitialStockWalletDbMigration")]
    partial class InitialStockWalletDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Grade", b =>
                {
                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Dividend")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Indebtedness")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("NetMargin")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Overlap")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("ProfitLast5Years")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("RecommendedWallet")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("ReturnOnEquity")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("SectorAndQuality")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("StockID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<bool>("IsPurchase")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<int>("WalletID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("StockID");

                    b.HasIndex("WalletID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Price", b =>
                {
                    b.Property<int>("PriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(18,4)");

                    b.HasKey("PriceID");

                    b.HasIndex("StockID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Sample", b =>
                {
                    b.Property<int>("SampleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SampleID");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Sector", b =>
                {
                    b.Property<int>("SectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorID");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubSectionID")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectorID")
                        .HasColumnType("int");

                    b.HasKey("StockID");

                    b.HasIndex("SubSectorID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Stop", b =>
                {
                    b.Property<int>("StopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExclusionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Gain1")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Gain2")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal>("Loss")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.HasKey("StopID");

                    b.HasIndex("StockID");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.SubSector", b =>
                {
                    b.Property<int>("SubSectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionID")
                        .HasColumnType("int");

                    b.Property<int?>("SectorID")
                        .HasColumnType("int");

                    b.HasKey("SubSectorID");

                    b.HasIndex("SectorID");

                    b.ToTable("SubSectors");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Wallet", b =>
                {
                    b.Property<int>("WalletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WalletID");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Grade", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", "Stock")
                        .WithOne("Grade")
                        .HasForeignKey("BAYSOFT.Core.Domain.Entities.StockWallet.Grade", "StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Order", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", "Stock")
                        .WithMany("Orders")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Wallet", "Wallet")
                        .WithMany("Orders")
                        .HasForeignKey("WalletID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Price", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", "Stock")
                        .WithMany("Prices")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.SubSector", "SubSector")
                        .WithMany("Stocks")
                        .HasForeignKey("SubSectorID");
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.Stop", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Stock", "Stock")
                        .WithMany("Stops")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BAYSOFT.Core.Domain.Entities.StockWallet.SubSector", b =>
                {
                    b.HasOne("BAYSOFT.Core.Domain.Entities.StockWallet.Sector", "Sector")
                        .WithMany("SubSectors")
                        .HasForeignKey("SectorID");
                });
#pragma warning restore 612, 618
        }
    }
}
